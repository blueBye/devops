services:
  postgres:
    image: ${POSTGRESQL_IMAGE_TAG}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB_NAME}
      POSTGRES_USER: ${POSTGRESQL_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_DB_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
      LANG: en_US.utf8
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=en-US"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgres:/var/lib/postgresql/data
    networks:
      - traefik-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRESQL_DB_NAME}", "-U", "${POSTGRESQL_DB_USER}" ]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      # postgres router
      - "traefik.tcp.routers.postgres.rule=HostSNI(`${POSTGRESQL_HOSTNAME}`)"
      - "traefik.tcp.routers.postgres.service=postgres"
      - "traefik.tcp.routers.postgres.entrypoints=postgres"
      - "traefik.tcp.routers.postgres.tls=true"
      - "traefik.tcp.routers.postgres.tls.certresolver=cloudflare"
      # postgres service
      - "traefik.tcp.services.postgres.loadbalancer.server.port=${POSTGRESQL_PORT}"
      # docker network
      - "traefik.docker.network=traefik-network"